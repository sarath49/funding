<?php
use Symfony\Component\Yaml\Yaml;

/**
 * @file
 * Provide long text formatters and widgets for OpenCollective and similar platforms.
 *
 */
/**
 * Implements hook_help().
 */
function funding_help($path, $arg) {
  switch ($path) {
    case 'admin/help#funding':
      return t("Provide link formatters and widgets for OpenCollective and similar platforms.");
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function funding_field_formatter_info() {
  return array(
    'funding_providers' => array(
      'label' => t('Render the funding providers'),
      'field types' => array(
        'text_long'
      )
    )
  );
}

/**
 * Implements hook_field_formatter_view().
 * 
 * Eg.
 * opencollective-js:
 *   slug: portland-drupal
 *   verb: donate
 *   color: blue
 * opencollective-img:
 *   slug: portland-drupal
 *   verb: contribute
 *   color: white
 */
function funding_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];
  $settings = $display['settings'];

  $funding_yaml = $items[0]['value'];
  if (!empty($funding_yaml)) {
    $funding_config = Yaml::parse($funding_yaml);
    //drupal_set_message(print_r($funding_config, true), 'error');
    foreach ($funding_config as $provider => $config){
      switch ($provider) {
        case 'opencollective-js':
          $slug = $config['slug'];
          $verb = $config['verb'];
          $color = $config['color'];
          $element[0][$provider] = ['#type' => 'markup', '#markup' => '<script src="https://opencollective.com/' . $slug . '/' . $verb . '/button.js" color="' . $color . '"></script>',
          '#allowed_tags' => ['script',], ];
          break;
        case 'opencollective-img':
          $slug = $config['slug'];
          $verb = $config['verb'];
          $color = $config['color'];
          $element[0][$provider] = ['#type' => 'markup', '#markup' => '<a href="https://opencollective.com/' . $slug . '/' . $verb . '" target="_blank"> <img src="https://opencollective.com/' . $slug . '/' . $verb . '/button@2x.png?color=' . $color . '" width=300 /></a>',
          '#allowed_tags' => ['img','a', ], ];
          break;
        case 'twitter-timeline':
          $handle = $config['handle'];
          $element[0][$provider] = ['#type' => 'markup', '#markup' => '<a class="twitter-timeline" href="https://twitter.com/' . $handle . '?ref_src=twsrc%5Etfw">Tweets by drupalassoc</a> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>',
          '#allowed_tags' => ['script','a', ], ];
          break;
      }
    }
  }
  
return $element;
}
